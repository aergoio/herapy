import pytest

from aergo.herapy.utils.encoding import encode_b58, encode_b58_check, decode_b58, decode_b58_check


test_cases = [
    ("1112", b'\x00\x00\x00\x01', "9EE5j9NQ4Hd", b'\x39\x45\x45\x35\x6a\x39\x4e\x51\x34\x48\x64'),
    ("2g", b'\x61', "S6odnmnk", b'\x53\x36\x6f\x64\x6e\x6d\x6e\x6b'),
    ("a3gV", b'\x62\x62\x62', "HFyEKLkMpzM", b'\x48\x46\x79\x45\x4b\x4c\x6b\x4d\x70\x7a\x4d'),
    ("aPEr", b'\x63\x63\x63', "HH4gNgLFvMe", b'\x48\x48\x34\x67\x4e\x67\x4c\x46\x76\x4d\x65'),
    ("2cFupjhnEsSn59qHXstmK2ffpLv2", b'\x73\x69\x6d\x70\x6c\x79\x20\x61\x20\x6c\x6f\x6e\x67\x20\x73\x74\x72\x69\x6e\x67', "4PhBhLVGUM7kEy9Qt7tctXmkxMtiS9LEYhV3CsUnVKx3", b'\x34\x50\x68\x42\x68\x4c\x56\x47\x55\x4d\x37\x6b\x45\x79\x39\x51\x74\x37\x74\x63\x74\x58\x6d\x6b\x78\x4d\x74\x69\x53\x39\x4c\x45\x59\x68\x56\x33\x43\x73\x55\x6e\x56\x4b\x78\x33'),
    ("1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L", b'\x00\xeb\x15\x23\x1d\xfc\xeb\x60\x92\x58\x86\xb6\x7d\x06\x52\x99\x92\x59\x15\xae\xb1\x72\xc0\x66\x47', "8J39ihjrx379v5sqrSHQjaJyGyRcgkbnZb113zsQm5PbYB9WzqYW", b'\x38\x4a\x33\x39\x69\x68\x6a\x72\x78\x33\x37\x39\x76\x35\x73\x71\x72\x53\x48\x51\x6a\x61\x4a\x79\x47\x79\x52\x63\x67\x6b\x62\x6e\x5a\x62\x31\x31\x33\x7a\x73\x51\x6d\x35\x50\x62\x59\x42\x39\x57\x7a\x71\x59\x57'),
    ("ABnLTmg", b'\x51\x6b\x6f\xcd\x0f', "HBbfPyoqLFjugAT", b'\x48\x42\x62\x66\x50\x79\x6f\x71\x4c\x46\x6a\x75\x67\x41\x54'),
    ("3SEo3LWLoPntC", b'\xbf\x4f\x89\x00\x1e\x67\x02\x74\xdd', "UyVcDVto1zs9UD93Ege1xzg", b'\x55\x79\x56\x63\x44\x56\x74\x6f\x31\x7a\x73\x39\x55\x44\x39\x33\x45\x67\x65\x31\x78\x7a\x67'),
    ("3EFU7m", b'\x57\x2e\x47\x94', "3t4vNDzbmvp86U", b'\x33\x74\x34\x76\x4e\x44\x7a\x62\x6d\x76\x70\x38\x36\x55'),
    ("EJDM8drfXA6uyA", b'\xec\xac\x89\xca\xd9\x39\x23\xc0\x23\x21', "3sgxanyiW5xN3Y7E8TUeuu9Rb", b'\x33\x73\x67\x78\x61\x6e\x79\x69\x57\x35\x78\x4e\x33\x59\x37\x45\x38\x54\x55\x65\x75\x75\x39\x52\x62'),
    ("Rt5zm", b'\x10\xc8\x51\x1e', "23sd4vCuZzKDf", b'\x32\x33\x73\x64\x34\x76\x43\x75\x5a\x7a\x4b\x44\x66'),
    ("1111111111", b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00', "K5uxnMsCEZLr6L8DWnZ", b'\x4b\x35\x75\x78\x6e\x4d\x73\x43\x45\x5a\x4c\x72\x36\x4c\x38\x44\x57\x6e\x5a'),
]


def test_encode():
    for t in test_cases:
        assert encode_b58(t[1]) == t[0]


def test_decode():
    for t in test_cases:
        assert decode_b58(t[0]) == t[1]


def test_encode_check():
    for t in test_cases:
        assert encode_b58_check(bytes(t[0], encoding='utf-8')) == t[2]


def test_decode_check():
    for t in test_cases:
        assert decode_b58_check(t[3]) == bytes(t[0], encoding='utf-8')
