# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: metric.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='metric.proto',
  package='types',
  syntax='proto3',
  serialized_options=_b('Z\036github.com/aergoio/aergo/types'),
  serialized_pb=_b('\n\x0cmetric.proto\x12\x05types\"2\n\x0eMetricsRequest\x12 \n\x05types\x18\x01 \x03(\x0e\x32\x11.types.MetricType\"+\n\x07Metrics\x12 \n\x05peers\x18\x01 \x03(\x0b\x32\x11.types.PeerMetric\"Z\n\nPeerMetric\x12\x0e\n\x06peerID\x18\x01 \x01(\x0c\x12\r\n\x05sumIn\x18\x02 \x01(\x03\x12\r\n\x05\x61vrIn\x18\x03 \x01(\x03\x12\x0e\n\x06sumOut\x18\x04 \x01(\x03\x12\x0e\n\x06\x61vrOut\x18\x05 \x01(\x03**\n\nMetricType\x12\x0b\n\x07NOTHING\x10\x00\x12\x0f\n\x0bP2P_NETWORK\x10\x01\x42 Z\x1egithub.com/aergoio/aergo/typesb\x06proto3')
)

_METRICTYPE = _descriptor.EnumDescriptor(
  name='MetricType',
  full_name='types.MetricType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='NOTHING', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='P2P_NETWORK', index=1, number=1,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=212,
  serialized_end=254,
)
_sym_db.RegisterEnumDescriptor(_METRICTYPE)

MetricType = enum_type_wrapper.EnumTypeWrapper(_METRICTYPE)
NOTHING = 0
P2P_NETWORK = 1



_METRICSREQUEST = _descriptor.Descriptor(
  name='MetricsRequest',
  full_name='types.MetricsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='types', full_name='types.MetricsRequest.types', index=0,
      number=1, type=14, cpp_type=8, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=23,
  serialized_end=73,
)


_METRICS = _descriptor.Descriptor(
  name='Metrics',
  full_name='types.Metrics',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='peers', full_name='types.Metrics.peers', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=75,
  serialized_end=118,
)


_PEERMETRIC = _descriptor.Descriptor(
  name='PeerMetric',
  full_name='types.PeerMetric',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='peerID', full_name='types.PeerMetric.peerID', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='sumIn', full_name='types.PeerMetric.sumIn', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='avrIn', full_name='types.PeerMetric.avrIn', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='sumOut', full_name='types.PeerMetric.sumOut', index=3,
      number=4, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='avrOut', full_name='types.PeerMetric.avrOut', index=4,
      number=5, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=120,
  serialized_end=210,
)

_METRICSREQUEST.fields_by_name['types'].enum_type = _METRICTYPE
_METRICS.fields_by_name['peers'].message_type = _PEERMETRIC
DESCRIPTOR.message_types_by_name['MetricsRequest'] = _METRICSREQUEST
DESCRIPTOR.message_types_by_name['Metrics'] = _METRICS
DESCRIPTOR.message_types_by_name['PeerMetric'] = _PEERMETRIC
DESCRIPTOR.enum_types_by_name['MetricType'] = _METRICTYPE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

MetricsRequest = _reflection.GeneratedProtocolMessageType('MetricsRequest', (_message.Message,), dict(
  DESCRIPTOR = _METRICSREQUEST,
  __module__ = 'metric_pb2'
  # @@protoc_insertion_point(class_scope:types.MetricsRequest)
  ))
_sym_db.RegisterMessage(MetricsRequest)

Metrics = _reflection.GeneratedProtocolMessageType('Metrics', (_message.Message,), dict(
  DESCRIPTOR = _METRICS,
  __module__ = 'metric_pb2'
  # @@protoc_insertion_point(class_scope:types.Metrics)
  ))
_sym_db.RegisterMessage(Metrics)

PeerMetric = _reflection.GeneratedProtocolMessageType('PeerMetric', (_message.Message,), dict(
  DESCRIPTOR = _PEERMETRIC,
  __module__ = 'metric_pb2'
  # @@protoc_insertion_point(class_scope:types.PeerMetric)
  ))
_sym_db.RegisterMessage(PeerMetric)


DESCRIPTOR._options = None
# @@protoc_insertion_point(module_scope)
